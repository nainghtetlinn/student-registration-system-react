/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StudentRouteRouteImport } from './routes/student/route'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as StudentIndexRouteImport } from './routes/student/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as HomeIndexRouteImport } from './routes/_home/index'
import { Route as AuthLoginIndexRouteImport } from './routes/auth/login/index'
import { Route as AuthChangePasswordIndexRouteImport } from './routes/auth/change-password/index'
import { Route as AdminProfileIndexRouteImport } from './routes/admin/profile/index'
import { Route as AdminFormsIndexRouteImport } from './routes/admin/forms/index'
import { Route as StudentUpdateSuccessRouteImport } from './routes/student/update/success'
import { Route as StudentRegisterSuccessRouteImport } from './routes/student/register/success'
import { Route as AdminDocumentsShortcutsRouteImport } from './routes/admin/_documents/shortcuts'
import { Route as AdminAccountsStudentsRouteImport } from './routes/admin/_accounts/students'
import { Route as AdminAccountsStaffsRouteImport } from './routes/admin/_accounts/staffs'
import { Route as AdminAccountsRegisterRouteImport } from './routes/admin/_accounts/register'
import { Route as AdminProfileUpdateIndexRouteImport } from './routes/admin/profile/update/index'
import { Route as AdminProfileCreateIndexRouteImport } from './routes/admin/profile/create/index'
import { Route as AdminFormsCreateIndexRouteImport } from './routes/admin/forms/create/index'
import { Route as AdminFormsIdIndexRouteImport } from './routes/admin/forms/$id/index'
import { Route as StudentUpdateEntranceFormIdRouteImport } from './routes/student/update/entrance-form/$id'
import { Route as StudentRegisterEntranceFormIdRouteImport } from './routes/student/register/entrance-form/$id'
import { Route as AdminAccountsAccountsEmailRouteImport } from './routes/admin/_accounts/accounts.$email'
import { Route as AdminFormsIdUpdateIndexRouteImport } from './routes/admin/forms/$id/update/index'
import { Route as AdminFormsIdConfirmClosureIndexRouteImport } from './routes/admin/forms/$id/confirm-closure/index'

const StudentRouteRoute = StudentRouteRouteImport.update({
  id: '/student',
  path: '/student',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentIndexRoute = StudentIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StudentRouteRoute,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/_home/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthChangePasswordIndexRoute = AuthChangePasswordIndexRouteImport.update({
  id: '/change-password/',
  path: '/change-password/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AdminProfileIndexRoute = AdminProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminFormsIndexRoute = AdminFormsIndexRouteImport.update({
  id: '/forms/',
  path: '/forms/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const StudentUpdateSuccessRoute = StudentUpdateSuccessRouteImport.update({
  id: '/update/success',
  path: '/update/success',
  getParentRoute: () => StudentRouteRoute,
} as any)
const StudentRegisterSuccessRoute = StudentRegisterSuccessRouteImport.update({
  id: '/register/success',
  path: '/register/success',
  getParentRoute: () => StudentRouteRoute,
} as any)
const AdminDocumentsShortcutsRoute = AdminDocumentsShortcutsRouteImport.update({
  id: '/_documents/shortcuts',
  path: '/shortcuts',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAccountsStudentsRoute = AdminAccountsStudentsRouteImport.update({
  id: '/_accounts/students',
  path: '/students',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAccountsStaffsRoute = AdminAccountsStaffsRouteImport.update({
  id: '/_accounts/staffs',
  path: '/staffs',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAccountsRegisterRoute = AdminAccountsRegisterRouteImport.update({
  id: '/_accounts/register',
  path: '/register',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminProfileUpdateIndexRoute = AdminProfileUpdateIndexRouteImport.update({
  id: '/profile/update/',
  path: '/profile/update/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminProfileCreateIndexRoute = AdminProfileCreateIndexRouteImport.update({
  id: '/profile/create/',
  path: '/profile/create/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminFormsCreateIndexRoute = AdminFormsCreateIndexRouteImport.update({
  id: '/forms/create/',
  path: '/forms/create/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminFormsIdIndexRoute = AdminFormsIdIndexRouteImport.update({
  id: '/forms/$id/',
  path: '/forms/$id/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const StudentUpdateEntranceFormIdRoute =
  StudentUpdateEntranceFormIdRouteImport.update({
    id: '/update/entrance-form/$id',
    path: '/update/entrance-form/$id',
    getParentRoute: () => StudentRouteRoute,
  } as any)
const StudentRegisterEntranceFormIdRoute =
  StudentRegisterEntranceFormIdRouteImport.update({
    id: '/register/entrance-form/$id',
    path: '/register/entrance-form/$id',
    getParentRoute: () => StudentRouteRoute,
  } as any)
const AdminAccountsAccountsEmailRoute =
  AdminAccountsAccountsEmailRouteImport.update({
    id: '/_accounts/accounts/$email',
    path: '/accounts/$email',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminFormsIdUpdateIndexRoute = AdminFormsIdUpdateIndexRouteImport.update({
  id: '/forms/$id/update/',
  path: '/forms/$id/update/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminFormsIdConfirmClosureIndexRoute =
  AdminFormsIdConfirmClosureIndexRouteImport.update({
    id: '/forms/$id/confirm-closure/',
    path: '/forms/$id/confirm-closure/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/student': typeof StudentRouteRouteWithChildren
  '/': typeof HomeIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/student/': typeof StudentIndexRoute
  '/admin/register': typeof AdminAccountsRegisterRoute
  '/admin/staffs': typeof AdminAccountsStaffsRoute
  '/admin/students': typeof AdminAccountsStudentsRoute
  '/admin/shortcuts': typeof AdminDocumentsShortcutsRoute
  '/student/register/success': typeof StudentRegisterSuccessRoute
  '/student/update/success': typeof StudentUpdateSuccessRoute
  '/admin/forms': typeof AdminFormsIndexRoute
  '/admin/profile': typeof AdminProfileIndexRoute
  '/auth/change-password': typeof AuthChangePasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/admin/accounts/$email': typeof AdminAccountsAccountsEmailRoute
  '/student/register/entrance-form/$id': typeof StudentRegisterEntranceFormIdRoute
  '/student/update/entrance-form/$id': typeof StudentUpdateEntranceFormIdRoute
  '/admin/forms/$id': typeof AdminFormsIdIndexRoute
  '/admin/forms/create': typeof AdminFormsCreateIndexRoute
  '/admin/profile/create': typeof AdminProfileCreateIndexRoute
  '/admin/profile/update': typeof AdminProfileUpdateIndexRoute
  '/admin/forms/$id/confirm-closure': typeof AdminFormsIdConfirmClosureIndexRoute
  '/admin/forms/$id/update': typeof AdminFormsIdUpdateIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteRouteWithChildren
  '/': typeof HomeIndexRoute
  '/admin': typeof AdminIndexRoute
  '/student': typeof StudentIndexRoute
  '/admin/register': typeof AdminAccountsRegisterRoute
  '/admin/staffs': typeof AdminAccountsStaffsRoute
  '/admin/students': typeof AdminAccountsStudentsRoute
  '/admin/shortcuts': typeof AdminDocumentsShortcutsRoute
  '/student/register/success': typeof StudentRegisterSuccessRoute
  '/student/update/success': typeof StudentUpdateSuccessRoute
  '/admin/forms': typeof AdminFormsIndexRoute
  '/admin/profile': typeof AdminProfileIndexRoute
  '/auth/change-password': typeof AuthChangePasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/admin/accounts/$email': typeof AdminAccountsAccountsEmailRoute
  '/student/register/entrance-form/$id': typeof StudentRegisterEntranceFormIdRoute
  '/student/update/entrance-form/$id': typeof StudentUpdateEntranceFormIdRoute
  '/admin/forms/$id': typeof AdminFormsIdIndexRoute
  '/admin/forms/create': typeof AdminFormsCreateIndexRoute
  '/admin/profile/create': typeof AdminProfileCreateIndexRoute
  '/admin/profile/update': typeof AdminProfileUpdateIndexRoute
  '/admin/forms/$id/confirm-closure': typeof AdminFormsIdConfirmClosureIndexRoute
  '/admin/forms/$id/update': typeof AdminFormsIdUpdateIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/student': typeof StudentRouteRouteWithChildren
  '/_home/': typeof HomeIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/student/': typeof StudentIndexRoute
  '/admin/_accounts/register': typeof AdminAccountsRegisterRoute
  '/admin/_accounts/staffs': typeof AdminAccountsStaffsRoute
  '/admin/_accounts/students': typeof AdminAccountsStudentsRoute
  '/admin/_documents/shortcuts': typeof AdminDocumentsShortcutsRoute
  '/student/register/success': typeof StudentRegisterSuccessRoute
  '/student/update/success': typeof StudentUpdateSuccessRoute
  '/admin/forms/': typeof AdminFormsIndexRoute
  '/admin/profile/': typeof AdminProfileIndexRoute
  '/auth/change-password/': typeof AuthChangePasswordIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/admin/_accounts/accounts/$email': typeof AdminAccountsAccountsEmailRoute
  '/student/register/entrance-form/$id': typeof StudentRegisterEntranceFormIdRoute
  '/student/update/entrance-form/$id': typeof StudentUpdateEntranceFormIdRoute
  '/admin/forms/$id/': typeof AdminFormsIdIndexRoute
  '/admin/forms/create/': typeof AdminFormsCreateIndexRoute
  '/admin/profile/create/': typeof AdminProfileCreateIndexRoute
  '/admin/profile/update/': typeof AdminProfileUpdateIndexRoute
  '/admin/forms/$id/confirm-closure/': typeof AdminFormsIdConfirmClosureIndexRoute
  '/admin/forms/$id/update/': typeof AdminFormsIdUpdateIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin'
    | '/auth'
    | '/student'
    | '/'
    | '/admin/'
    | '/student/'
    | '/admin/register'
    | '/admin/staffs'
    | '/admin/students'
    | '/admin/shortcuts'
    | '/student/register/success'
    | '/student/update/success'
    | '/admin/forms'
    | '/admin/profile'
    | '/auth/change-password'
    | '/auth/login'
    | '/admin/accounts/$email'
    | '/student/register/entrance-form/$id'
    | '/student/update/entrance-form/$id'
    | '/admin/forms/$id'
    | '/admin/forms/create'
    | '/admin/profile/create'
    | '/admin/profile/update'
    | '/admin/forms/$id/confirm-closure'
    | '/admin/forms/$id/update'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/'
    | '/admin'
    | '/student'
    | '/admin/register'
    | '/admin/staffs'
    | '/admin/students'
    | '/admin/shortcuts'
    | '/student/register/success'
    | '/student/update/success'
    | '/admin/forms'
    | '/admin/profile'
    | '/auth/change-password'
    | '/auth/login'
    | '/admin/accounts/$email'
    | '/student/register/entrance-form/$id'
    | '/student/update/entrance-form/$id'
    | '/admin/forms/$id'
    | '/admin/forms/create'
    | '/admin/profile/create'
    | '/admin/profile/update'
    | '/admin/forms/$id/confirm-closure'
    | '/admin/forms/$id/update'
  id:
    | '__root__'
    | '/admin'
    | '/auth'
    | '/student'
    | '/_home/'
    | '/admin/'
    | '/student/'
    | '/admin/_accounts/register'
    | '/admin/_accounts/staffs'
    | '/admin/_accounts/students'
    | '/admin/_documents/shortcuts'
    | '/student/register/success'
    | '/student/update/success'
    | '/admin/forms/'
    | '/admin/profile/'
    | '/auth/change-password/'
    | '/auth/login/'
    | '/admin/_accounts/accounts/$email'
    | '/student/register/entrance-form/$id'
    | '/student/update/entrance-form/$id'
    | '/admin/forms/$id/'
    | '/admin/forms/create/'
    | '/admin/profile/create/'
    | '/admin/profile/update/'
    | '/admin/forms/$id/confirm-closure/'
    | '/admin/forms/$id/update/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  StudentRouteRoute: typeof StudentRouteRouteWithChildren
  HomeIndexRoute: typeof HomeIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/student': {
      id: '/student'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student/': {
      id: '/student/'
      path: '/'
      fullPath: '/student/'
      preLoaderRoute: typeof StudentIndexRouteImport
      parentRoute: typeof StudentRouteRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/_home/': {
      id: '/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/change-password/': {
      id: '/auth/change-password/'
      path: '/change-password'
      fullPath: '/auth/change-password'
      preLoaderRoute: typeof AuthChangePasswordIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/admin/profile/': {
      id: '/admin/profile/'
      path: '/profile'
      fullPath: '/admin/profile'
      preLoaderRoute: typeof AdminProfileIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/forms/': {
      id: '/admin/forms/'
      path: '/forms'
      fullPath: '/admin/forms'
      preLoaderRoute: typeof AdminFormsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/student/update/success': {
      id: '/student/update/success'
      path: '/update/success'
      fullPath: '/student/update/success'
      preLoaderRoute: typeof StudentUpdateSuccessRouteImport
      parentRoute: typeof StudentRouteRoute
    }
    '/student/register/success': {
      id: '/student/register/success'
      path: '/register/success'
      fullPath: '/student/register/success'
      preLoaderRoute: typeof StudentRegisterSuccessRouteImport
      parentRoute: typeof StudentRouteRoute
    }
    '/admin/_documents/shortcuts': {
      id: '/admin/_documents/shortcuts'
      path: '/shortcuts'
      fullPath: '/admin/shortcuts'
      preLoaderRoute: typeof AdminDocumentsShortcutsRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/_accounts/students': {
      id: '/admin/_accounts/students'
      path: '/students'
      fullPath: '/admin/students'
      preLoaderRoute: typeof AdminAccountsStudentsRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/_accounts/staffs': {
      id: '/admin/_accounts/staffs'
      path: '/staffs'
      fullPath: '/admin/staffs'
      preLoaderRoute: typeof AdminAccountsStaffsRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/_accounts/register': {
      id: '/admin/_accounts/register'
      path: '/register'
      fullPath: '/admin/register'
      preLoaderRoute: typeof AdminAccountsRegisterRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/profile/update/': {
      id: '/admin/profile/update/'
      path: '/profile/update'
      fullPath: '/admin/profile/update'
      preLoaderRoute: typeof AdminProfileUpdateIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/profile/create/': {
      id: '/admin/profile/create/'
      path: '/profile/create'
      fullPath: '/admin/profile/create'
      preLoaderRoute: typeof AdminProfileCreateIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/forms/create/': {
      id: '/admin/forms/create/'
      path: '/forms/create'
      fullPath: '/admin/forms/create'
      preLoaderRoute: typeof AdminFormsCreateIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/forms/$id/': {
      id: '/admin/forms/$id/'
      path: '/forms/$id'
      fullPath: '/admin/forms/$id'
      preLoaderRoute: typeof AdminFormsIdIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/student/update/entrance-form/$id': {
      id: '/student/update/entrance-form/$id'
      path: '/update/entrance-form/$id'
      fullPath: '/student/update/entrance-form/$id'
      preLoaderRoute: typeof StudentUpdateEntranceFormIdRouteImport
      parentRoute: typeof StudentRouteRoute
    }
    '/student/register/entrance-form/$id': {
      id: '/student/register/entrance-form/$id'
      path: '/register/entrance-form/$id'
      fullPath: '/student/register/entrance-form/$id'
      preLoaderRoute: typeof StudentRegisterEntranceFormIdRouteImport
      parentRoute: typeof StudentRouteRoute
    }
    '/admin/_accounts/accounts/$email': {
      id: '/admin/_accounts/accounts/$email'
      path: '/accounts/$email'
      fullPath: '/admin/accounts/$email'
      preLoaderRoute: typeof AdminAccountsAccountsEmailRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/forms/$id/update/': {
      id: '/admin/forms/$id/update/'
      path: '/forms/$id/update'
      fullPath: '/admin/forms/$id/update'
      preLoaderRoute: typeof AdminFormsIdUpdateIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/forms/$id/confirm-closure/': {
      id: '/admin/forms/$id/confirm-closure/'
      path: '/forms/$id/confirm-closure'
      fullPath: '/admin/forms/$id/confirm-closure'
      preLoaderRoute: typeof AdminFormsIdConfirmClosureIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
  }
}

interface AdminRouteRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminAccountsRegisterRoute: typeof AdminAccountsRegisterRoute
  AdminAccountsStaffsRoute: typeof AdminAccountsStaffsRoute
  AdminAccountsStudentsRoute: typeof AdminAccountsStudentsRoute
  AdminDocumentsShortcutsRoute: typeof AdminDocumentsShortcutsRoute
  AdminFormsIndexRoute: typeof AdminFormsIndexRoute
  AdminProfileIndexRoute: typeof AdminProfileIndexRoute
  AdminAccountsAccountsEmailRoute: typeof AdminAccountsAccountsEmailRoute
  AdminFormsIdIndexRoute: typeof AdminFormsIdIndexRoute
  AdminFormsCreateIndexRoute: typeof AdminFormsCreateIndexRoute
  AdminProfileCreateIndexRoute: typeof AdminProfileCreateIndexRoute
  AdminProfileUpdateIndexRoute: typeof AdminProfileUpdateIndexRoute
  AdminFormsIdConfirmClosureIndexRoute: typeof AdminFormsIdConfirmClosureIndexRoute
  AdminFormsIdUpdateIndexRoute: typeof AdminFormsIdUpdateIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminAccountsRegisterRoute: AdminAccountsRegisterRoute,
  AdminAccountsStaffsRoute: AdminAccountsStaffsRoute,
  AdminAccountsStudentsRoute: AdminAccountsStudentsRoute,
  AdminDocumentsShortcutsRoute: AdminDocumentsShortcutsRoute,
  AdminFormsIndexRoute: AdminFormsIndexRoute,
  AdminProfileIndexRoute: AdminProfileIndexRoute,
  AdminAccountsAccountsEmailRoute: AdminAccountsAccountsEmailRoute,
  AdminFormsIdIndexRoute: AdminFormsIdIndexRoute,
  AdminFormsCreateIndexRoute: AdminFormsCreateIndexRoute,
  AdminProfileCreateIndexRoute: AdminProfileCreateIndexRoute,
  AdminProfileUpdateIndexRoute: AdminProfileUpdateIndexRoute,
  AdminFormsIdConfirmClosureIndexRoute: AdminFormsIdConfirmClosureIndexRoute,
  AdminFormsIdUpdateIndexRoute: AdminFormsIdUpdateIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthChangePasswordIndexRoute: typeof AuthChangePasswordIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthChangePasswordIndexRoute: AuthChangePasswordIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface StudentRouteRouteChildren {
  StudentIndexRoute: typeof StudentIndexRoute
  StudentRegisterSuccessRoute: typeof StudentRegisterSuccessRoute
  StudentUpdateSuccessRoute: typeof StudentUpdateSuccessRoute
  StudentRegisterEntranceFormIdRoute: typeof StudentRegisterEntranceFormIdRoute
  StudentUpdateEntranceFormIdRoute: typeof StudentUpdateEntranceFormIdRoute
}

const StudentRouteRouteChildren: StudentRouteRouteChildren = {
  StudentIndexRoute: StudentIndexRoute,
  StudentRegisterSuccessRoute: StudentRegisterSuccessRoute,
  StudentUpdateSuccessRoute: StudentUpdateSuccessRoute,
  StudentRegisterEntranceFormIdRoute: StudentRegisterEntranceFormIdRoute,
  StudentUpdateEntranceFormIdRoute: StudentUpdateEntranceFormIdRoute,
}

const StudentRouteRouteWithChildren = StudentRouteRoute._addFileChildren(
  StudentRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  StudentRouteRoute: StudentRouteRouteWithChildren,
  HomeIndexRoute: HomeIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
