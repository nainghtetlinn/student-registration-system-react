/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AuthLoginIndexRouteImport } from './routes/auth/login/index'
import { Route as AuthChangePasswordIndexRouteImport } from './routes/auth/change-password/index'
import { Route as AdminProfileIndexRouteImport } from './routes/admin/profile/index'
import { Route as AdminDocumentsShortcutsRouteImport } from './routes/admin/_documents/shortcuts'
import { Route as AdminAccountsStudentsRouteImport } from './routes/admin/_accounts/students'
import { Route as AdminAccountsStaffsRouteImport } from './routes/admin/_accounts/staffs'
import { Route as AdminAccountsRegisterRouteImport } from './routes/admin/_accounts/register'
import { Route as AdminProfileUpdateIndexRouteImport } from './routes/admin/profile/update/index'
import { Route as AdminProfileCreateIndexRouteImport } from './routes/admin/profile/create/index'
import { Route as AdminAccountsAccountsEmailRouteImport } from './routes/admin/_accounts/accounts.$email'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthChangePasswordIndexRoute = AuthChangePasswordIndexRouteImport.update({
  id: '/change-password/',
  path: '/change-password/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AdminProfileIndexRoute = AdminProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminDocumentsShortcutsRoute = AdminDocumentsShortcutsRouteImport.update({
  id: '/_documents/shortcuts',
  path: '/shortcuts',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAccountsStudentsRoute = AdminAccountsStudentsRouteImport.update({
  id: '/_accounts/students',
  path: '/students',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAccountsStaffsRoute = AdminAccountsStaffsRouteImport.update({
  id: '/_accounts/staffs',
  path: '/staffs',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAccountsRegisterRoute = AdminAccountsRegisterRouteImport.update({
  id: '/_accounts/register',
  path: '/register',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminProfileUpdateIndexRoute = AdminProfileUpdateIndexRouteImport.update({
  id: '/profile/update/',
  path: '/profile/update/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminProfileCreateIndexRoute = AdminProfileCreateIndexRouteImport.update({
  id: '/profile/create/',
  path: '/profile/create/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAccountsAccountsEmailRoute =
  AdminAccountsAccountsEmailRouteImport.update({
    id: '/_accounts/accounts/$email',
    path: '/accounts/$email',
    getParentRoute: () => AdminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/admin/register': typeof AdminAccountsRegisterRoute
  '/admin/staffs': typeof AdminAccountsStaffsRoute
  '/admin/students': typeof AdminAccountsStudentsRoute
  '/admin/shortcuts': typeof AdminDocumentsShortcutsRoute
  '/admin/profile': typeof AdminProfileIndexRoute
  '/auth/change-password': typeof AuthChangePasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/admin/accounts/$email': typeof AdminAccountsAccountsEmailRoute
  '/admin/profile/create': typeof AdminProfileCreateIndexRoute
  '/admin/profile/update': typeof AdminProfileUpdateIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/admin': typeof AdminIndexRoute
  '/admin/register': typeof AdminAccountsRegisterRoute
  '/admin/staffs': typeof AdminAccountsStaffsRoute
  '/admin/students': typeof AdminAccountsStudentsRoute
  '/admin/shortcuts': typeof AdminDocumentsShortcutsRoute
  '/admin/profile': typeof AdminProfileIndexRoute
  '/auth/change-password': typeof AuthChangePasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/admin/accounts/$email': typeof AdminAccountsAccountsEmailRoute
  '/admin/profile/create': typeof AdminProfileCreateIndexRoute
  '/admin/profile/update': typeof AdminProfileUpdateIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/admin/_accounts/register': typeof AdminAccountsRegisterRoute
  '/admin/_accounts/staffs': typeof AdminAccountsStaffsRoute
  '/admin/_accounts/students': typeof AdminAccountsStudentsRoute
  '/admin/_documents/shortcuts': typeof AdminDocumentsShortcutsRoute
  '/admin/profile/': typeof AdminProfileIndexRoute
  '/auth/change-password/': typeof AuthChangePasswordIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/admin/_accounts/accounts/$email': typeof AdminAccountsAccountsEmailRoute
  '/admin/profile/create/': typeof AdminProfileCreateIndexRoute
  '/admin/profile/update/': typeof AdminProfileUpdateIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/auth'
    | '/admin/'
    | '/admin/register'
    | '/admin/staffs'
    | '/admin/students'
    | '/admin/shortcuts'
    | '/admin/profile'
    | '/auth/change-password'
    | '/auth/login'
    | '/admin/accounts/$email'
    | '/admin/profile/create'
    | '/admin/profile/update'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/admin'
    | '/admin/register'
    | '/admin/staffs'
    | '/admin/students'
    | '/admin/shortcuts'
    | '/admin/profile'
    | '/auth/change-password'
    | '/auth/login'
    | '/admin/accounts/$email'
    | '/admin/profile/create'
    | '/admin/profile/update'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/auth'
    | '/admin/'
    | '/admin/_accounts/register'
    | '/admin/_accounts/staffs'
    | '/admin/_accounts/students'
    | '/admin/_documents/shortcuts'
    | '/admin/profile/'
    | '/auth/change-password/'
    | '/auth/login/'
    | '/admin/_accounts/accounts/$email'
    | '/admin/profile/create/'
    | '/admin/profile/update/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/change-password/': {
      id: '/auth/change-password/'
      path: '/change-password'
      fullPath: '/auth/change-password'
      preLoaderRoute: typeof AuthChangePasswordIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/admin/profile/': {
      id: '/admin/profile/'
      path: '/profile'
      fullPath: '/admin/profile'
      preLoaderRoute: typeof AdminProfileIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/_documents/shortcuts': {
      id: '/admin/_documents/shortcuts'
      path: '/shortcuts'
      fullPath: '/admin/shortcuts'
      preLoaderRoute: typeof AdminDocumentsShortcutsRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/_accounts/students': {
      id: '/admin/_accounts/students'
      path: '/students'
      fullPath: '/admin/students'
      preLoaderRoute: typeof AdminAccountsStudentsRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/_accounts/staffs': {
      id: '/admin/_accounts/staffs'
      path: '/staffs'
      fullPath: '/admin/staffs'
      preLoaderRoute: typeof AdminAccountsStaffsRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/_accounts/register': {
      id: '/admin/_accounts/register'
      path: '/register'
      fullPath: '/admin/register'
      preLoaderRoute: typeof AdminAccountsRegisterRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/profile/update/': {
      id: '/admin/profile/update/'
      path: '/profile/update'
      fullPath: '/admin/profile/update'
      preLoaderRoute: typeof AdminProfileUpdateIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/profile/create/': {
      id: '/admin/profile/create/'
      path: '/profile/create'
      fullPath: '/admin/profile/create'
      preLoaderRoute: typeof AdminProfileCreateIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/_accounts/accounts/$email': {
      id: '/admin/_accounts/accounts/$email'
      path: '/accounts/$email'
      fullPath: '/admin/accounts/$email'
      preLoaderRoute: typeof AdminAccountsAccountsEmailRouteImport
      parentRoute: typeof AdminRouteRoute
    }
  }
}

interface AdminRouteRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminAccountsRegisterRoute: typeof AdminAccountsRegisterRoute
  AdminAccountsStaffsRoute: typeof AdminAccountsStaffsRoute
  AdminAccountsStudentsRoute: typeof AdminAccountsStudentsRoute
  AdminDocumentsShortcutsRoute: typeof AdminDocumentsShortcutsRoute
  AdminProfileIndexRoute: typeof AdminProfileIndexRoute
  AdminAccountsAccountsEmailRoute: typeof AdminAccountsAccountsEmailRoute
  AdminProfileCreateIndexRoute: typeof AdminProfileCreateIndexRoute
  AdminProfileUpdateIndexRoute: typeof AdminProfileUpdateIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminAccountsRegisterRoute: AdminAccountsRegisterRoute,
  AdminAccountsStaffsRoute: AdminAccountsStaffsRoute,
  AdminAccountsStudentsRoute: AdminAccountsStudentsRoute,
  AdminDocumentsShortcutsRoute: AdminDocumentsShortcutsRoute,
  AdminProfileIndexRoute: AdminProfileIndexRoute,
  AdminAccountsAccountsEmailRoute: AdminAccountsAccountsEmailRoute,
  AdminProfileCreateIndexRoute: AdminProfileCreateIndexRoute,
  AdminProfileUpdateIndexRoute: AdminProfileUpdateIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthChangePasswordIndexRoute: typeof AuthChangePasswordIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthChangePasswordIndexRoute: AuthChangePasswordIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
